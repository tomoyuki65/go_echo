basePath: /api/v1
definitions:
  api_internal_handlers_post.PostResponse:
    properties:
      created_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      edges:
        type: object
      id:
        example: 1
        type: integer
      text:
        example: こんにちは。
        type: string
      updated_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  api_internal_handlers_user.UserResponse:
    properties:
      created_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      edges:
        type: object
      email:
        example: taro@example.com
        type: string
      first_name:
        example: 太郎
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: 田中
        type: string
      uid:
        example: Xa12kK9ohsIhldD4
        type: string
      updated_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
    type: object
  index.PostIndexResponse:
    properties:
      message:
        example: こんにちは！
        type: string
    type: object
  index.RequestBody:
    properties:
      text:
        example: こんにちは！
        type: string
    required:
    - text
    type: object
  post.CreatePostRequestBody:
    properties:
      text:
        example: こんんちは。
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - text
    - user_id
    type: object
  post.MessageResponse:
    properties:
      message:
        type: string
    type: object
  post.PostResponseWithUser:
    properties:
      created_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      edges:
        properties:
          users:
            $ref: '#/definitions/post.User'
        type: object
      id:
        example: 1
        type: integer
      text:
        example: こんにちは。
        type: string
      updated_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  post.User:
    properties:
      created_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      edges:
        type: object
      email:
        example: taro@example.com
        type: string
      first_name:
        example: 太郎
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: 田中
        type: string
      uid:
        example: Xa12kK9ohsIhldD4
        type: string
      updated_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
    type: object
  user.CreateUserRequestBody:
    properties:
      email:
        example: taro@example.com
        type: string
      first_name:
        example: 太郎
        type: string
      last_name:
        example: 田中
        type: string
      uid:
        example: Ax1abc9uiowd9lKE
        type: string
    required:
    - email
    - first_name
    - last_name
    - uid
    type: object
  user.MessageResponse:
    properties:
      message:
        type: string
    type: object
  user.Post:
    properties:
      created_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      edges:
        type: object
      id:
        example: 1
        type: integer
      text:
        example: こんにちは。
        type: string
      updated_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  user.UpdateUserRequestBody:
    properties:
      email:
        example: taro@example.com
        type: string
      first_name:
        example: 太郎
        type: string
      last_name:
        example: 田中
        type: string
      password:
        example: x3D0k3Y89jIc
        minLength: 6
        type: string
    type: object
  user.UserResponseWithPosts:
    properties:
      created_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
      edges:
        properties:
          posts:
            items:
              $ref: '#/definitions/user.Post'
            type: array
        type: object
      email:
        example: taro@example.com
        type: string
      first_name:
        example: 太郎
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: 田中
        type: string
      uid:
        example: Xa12kK9ohsIhldD4
        type: string
      updated_at:
        example: "2024-06-23T23:18:49+09:00"
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: Go言語（Golang）のフレームワーク「Echo」によるバックエンドAPIのサンプル
  title: go_echo API
  version: "1.0"
paths:
  /hello:
    post:
      description: パラメータのtextを出力する
      parameters:
      - description: 入力テキスト
        in: body
        name: text
        required: true
        schema:
          $ref: '#/definitions/index.RequestBody'
      responses:
        "200":
          description: 出力メッセージ
          schema:
            $ref: '#/definitions/index.PostIndexResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      tags:
      - index
  /post:
    post:
      description: Post作成
      parameters:
      - description: 作成するPost情報
        in: body
        name: CreateUser
        required: true
        schema:
          $ref: '#/definitions/post.CreatePostRequestBody'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api_internal_handlers_post.PostResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      tags:
      - post
  /post/{id}:
    delete:
      description: 対象Post削除
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.MessageResponse'
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "500":
          description: Internal Server Error
      tags:
      - post
    get:
      description: 有効な対象Post取得
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.PostResponseWithUser'
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "500":
          description: Internal Server Error
      tags:
      - post
  /user:
    post:
      description: ユーザー作成
      parameters:
      - description: 作成するユーザー情報
        in: body
        name: CreateUser
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequestBody'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api_internal_handlers_user.UserResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      tags:
      - user
  /user/{uid}:
    delete:
      description: 対象ユーザー削除
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.MessageResponse'
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "500":
          description: Internal Server Error
      tags:
      - user
    get:
      description: 有効な対象ユーザー取得
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponseWithPosts'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      tags:
      - user
    put:
      description: 対象ユーザー更新
      parameters:
      - description: 更新するユーザー情報
        in: body
        name: UpdateUser
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api_internal_handlers_user.UserResponse'
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
        "500":
          description: Internal Server Error
      tags:
      - user
  /users:
    get:
      description: 有効な全てのユーザー取得
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api_internal_handlers_user.UserResponse'
            type: array
        "500":
          description: Internal Server Error
      tags:
      - user
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
