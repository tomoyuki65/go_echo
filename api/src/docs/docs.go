// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/hello": {
            "post": {
                "description": "パラメータのtextを出力する",
                "tags": [
                    "index"
                ],
                "parameters": [
                    {
                        "description": "入力テキスト",
                        "name": "text",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/index.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "出力メッセージ",
                        "schema": {
                            "$ref": "#/definitions/index.PostIndexResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/post": {
            "post": {
                "description": "Post作成",
                "tags": [
                    "post"
                ],
                "parameters": [
                    {
                        "description": "作成するPost情報",
                        "name": "CreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.CreatePostRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_internal_handlers_post.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/post/{id}": {
            "get": {
                "description": "有効な対象Post取得",
                "tags": [
                    "post"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.PostResponseWithUser"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "対象Post削除",
                "tags": [
                    "post"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/post.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "ユーザー作成",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "作成するユーザー情報",
                        "name": "CreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_internal_handlers_user.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{uid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "有効な対象ユーザー取得",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserResponseWithPosts"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "対象ユーザー更新",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "更新するユーザー情報",
                        "name": "UpdateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_internal_handlers_user.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "対象ユーザー削除",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "有効な全てのユーザー取得",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api_internal_handlers_user.UserResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "api_internal_handlers_post.PostResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "edges": {
                    "type": "object"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "こんにちは。"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "api_internal_handlers_user.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "edges": {
                    "type": "object"
                },
                "email": {
                    "type": "string",
                    "example": "taro@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "太郎"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "田中"
                },
                "uid": {
                    "type": "string",
                    "example": "Xa12kK9ohsIhldD4"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                }
            }
        },
        "index.PostIndexResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "こんにちは！"
                }
            }
        },
        "index.RequestBody": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "example": "こんにちは！"
                }
            }
        },
        "post.CreatePostRequestBody": {
            "type": "object",
            "required": [
                "text",
                "user_id"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "example": "こんんちは。"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "post.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "post.PostResponseWithUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "edges": {
                    "type": "object",
                    "properties": {
                        "users": {
                            "$ref": "#/definitions/post.User"
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "こんにちは。"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "post.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "edges": {
                    "type": "object"
                },
                "email": {
                    "type": "string",
                    "example": "taro@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "太郎"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "田中"
                },
                "uid": {
                    "type": "string",
                    "example": "Xa12kK9ohsIhldD4"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                }
            }
        },
        "user.CreateUserRequestBody": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "uid"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "taro@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "太郎"
                },
                "last_name": {
                    "type": "string",
                    "example": "田中"
                },
                "uid": {
                    "type": "string",
                    "example": "Ax1abc9uiowd9lKE"
                }
            }
        },
        "user.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "user.Post": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "edges": {
                    "type": "object"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "こんにちは。"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "user.UpdateUserRequestBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "taro@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "太郎"
                },
                "last_name": {
                    "type": "string",
                    "example": "田中"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "x3D0k3Y89jIc"
                }
            }
        },
        "user.UserResponseWithPosts": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                },
                "edges": {
                    "type": "object",
                    "properties": {
                        "posts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.Post"
                            }
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "example": "taro@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "太郎"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "田中"
                },
                "uid": {
                    "type": "string",
                    "example": "Xa12kK9ohsIhldD4"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-06-23T23:18:49+09:00"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "go_echo API",
	Description:      "Go言語（Golang）のフレームワーク「Echo」によるバックエンドAPIのサンプル",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
